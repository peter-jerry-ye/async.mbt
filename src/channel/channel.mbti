package "peter-jerry-ye/async/channel"

// Values
fn make[A](size~ : UInt = ..) -> T[A]

fn pop[A](T[A]) -> A

fn push[A](T[A], A) -> Unit

// Types and methods
type T[A]
impl T {
  pop[A](Self[A]) -> A
  push[A](Self[A], A) -> Unit
}

// Type aliases

// Traits

